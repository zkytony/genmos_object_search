<launch>
  <!-- Prereq: roslaunch movo_demos map_nav.launch map_file:=<map_name>
       should be running on MOVO2 -->
  <arg name="map_name"/>
  <arg name="world_frame" default="map"/>
  <arg name="local_search" default="false" type="bool"/>
  <arg name="map_points" value="/movo/map2d_points"/>
  <arg name="kinect_points" value="/kinect2/sd/filtered_points"/>
  <arg name="kinect_frame" value="kinect2_color_frame"/>  <!-- +x-forward frame -->

  <!-- local region size (scili8 living room) -->
  <arg name="region_size_x" default="4.0"/>
  <arg name="region_size_y" default="4.0"/>
  <arg name="region_size_z" default="2.0"/>
  <arg name="retain_ratio" default="0.2"/>

  <!-- Stream movo camera pose -->
  <node name="movo_stream_camera_pose" pkg="rbd_movo_systems" type="stream_camera_pose.py"
        output="screen"/>

  <!-- Run the occupancy to cloud converter -->
  <node name="occupancy_to_cloud" pkg="sloop_object_search_ros" type="occupancy_to_cloud"
        output="screen">
    <remap from="~grid_input" to="/map"/>
    <remap from="~cloud_output" to="$(arg map_points)"/>
  </node>

  <!-- filtered noise too close to kinect -->
  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />
  <node pkg="nodelet" type="nodelet"
        name="pass_through_z"
        args="load pcl/PassThrough pcl_manager">
    <param name="filter_field_name" value="z" />
    <param name="filter_limit_min" value="0.25" />
    <param name="filter_limit_max" value="3.0" />
    <param name="filter_limit_negative" value="False" />
    <remap from="~input" to="/kinect2/sd/points"/>
    <remap from="~output" to="/kinect2/sd/filtered_passthrough_z"/>
  </node>
  <node pkg="nodelet" type="nodelet"
        name="statistical_filter"
        args="load pcl/StatisticalOutlierRemoval pcl_manager">
    <param name="mean_k" value="2" />
    <param name="stddev" value="0.1" />
    <remap from="~input" to="/kinect2/sd/filtered_passthrough_z"/>
    <remap from="~output" to="/kinect2/sd/filtered_points"/>
  </node>


  <!-- Merge the map cloud with the kinect cloud -->
  <node name="point_cloud_merger"
        pkg="sloop_object_search_ros" type="point_cloud_merger"
        output="screen">
    <param name="input_topics"
           value="[$(arg map_points), $(arg kinect_points)]"
           type="string"/>
    <param name="output_frame_id" value="$(arg world_frame)"/>
    <remap from="/points_merged" to="/movo/local_region/input_points"/>
  </node>

  <include file="$(find sloop_object_search_ros)/launch/local_cloud_publisher.launch">
    <arg name="robot_pose_topic" value="/movo_camera_pose"/>
    <arg name="global_cloud_topic" value="/movo/local_region/input_points"/>
    <arg name="region_size_x" value="$(arg region_size_x)"/>
    <arg name="region_size_y" value="$(arg region_size_y)"/>
    <arg name="region_size_z" value="$(arg region_size_z)"/>
    <arg name="retain_ratio" value="$(arg retain_ratio)"/>
  </include>

  <!-- <group unless="$(arg local_search)"> -->
  <!--   <include file="$(find sloop_object_search_ros)/launch/local_cloud_publisher.launch"> -->
  <!--     <arg name="robot_pose_topic" value="/spot_hand_pose"/> -->
  <!--     <arg name="global_cloud_topic" value="/spot/local_region/input_points"/> -->
  <!--     <arg name="region_size_x" value="$(arg region_size_x)"/> -->
  <!--     <arg name="region_size_y" value="$(arg region_size_y)"/> -->
  <!--     <arg name="region_size_z" value="$(arg region_size_z)"/> -->
  <!--     <arg name="retain_ratio" value="$(arg retain_ratio)"/> -->
  <!--   </include> -->
  <!-- </group> -->


</launch>
