// Actions that an agent in sloop_object_search may perform.
// Note that all poses that parameterize an action are assumed to be
// with respect to a fixed world frame.

syntax = "proto3";

package sloop_object_search.grpc;

import "sloop_object_search/grpc/common.proto";

message Motion3D {
  Vec3 dpos = 1;
  oneof drot {
    Vec3 drot_euler = 2;  // in degrees
    Quaternion drot_quat = 3;
  }
}

message Motion2D {
  oneof dtrans {
    Vec2 dpos = 1;
    double forward = 2;
  }
  double dth = 3;
}

message MoveViewpoint {
  Header header = 1;
  string robot_id = 2;   // the robot that performs this action

  // The pose of the viewpoint
  oneof pose {
    Pose3D dest_3d = 3;
    Pose2D dest_2d = 4;
  }

  // The relative motion with respect to current viewpoint
  oneof motion {
    Motion2D motion_2d = 5;
    Motion3D motion_3d = 6;
  }

  string name = 7;  // name of the action
  float expected_cost = 8;
}

// declares some objects to be found. The objects that are declared
// found can be determined based on the robot's current field of view,
// or its updated belief.
message Find {
  Header header = 1;
  string robot_id = 2;   // the robot that performs this action
  string name = 5;
}

// This is a generic action type, used to support other actions such
// as environment interaction.
message KeyValueAction {
  Header header = 1;
  string robot_id = 2;  // the robot that performs this action
  string type = 3;  // identifies the action type
  int32 num_fields = 4;  // number of key-value pairs
  repeated string keys = 5;    // parameter names for this action
  repeated string values = 6;  // parameter values for this action
}
