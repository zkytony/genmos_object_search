# Copyright 2022 Kaiyu Zheng
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import pytest
import random
import math
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
import open3d as o3d
from sloop_object_search.oopomdp.models.sensors import (FanSensor,
                                                        FrustumCamera,
                                                        FanSensor3D,
                                                        pitch_facing)
from sloop_object_search.utils.math import to_rad, euler_to_quat, quat_to_euler, R_euler
from sloop_object_search.utils.plotting import plot_pose
from sloop_object_search.utils.colors import lighter, rgb_to_hex
from sloop_object_search.utils.open3d_utils import draw_octree_dist, cube_unfilled
from sloop_object_search.oopomdp.models.octree_belief import OccupancyOctreeDistribution

@pytest.fixture
def fansensor():
    return FanSensor(fov=75, min_range=0, max_range=4)

@pytest.fixture
def fansensor_big():
    return FanSensor(fov=75, min_range=0, max_range=10)

@pytest.fixture
def dim():
    return (30, 30)

@pytest.fixture
def robot_pose():
    return (2, 4, to_rad(0))

@pytest.fixture
def show_plots():
    return True

@pytest.mark.skip(reason="no need to test now.")
def test_fansensor_geometry(fansensor, dim, show_plots):
    if show_plots:
        fig, ax = plt.subplots()

    w, l = dim
    thetas = [0, 30, 60, 90, 135, 180, 225, 275, 360]
    for i in range(len(thetas)):
        x = random.uniform(2, w-2)
        y = random.uniform(2, l-2)
        th = thetas[i]
        robot_pose = (x, y, th)

        if show_plots:
            plot_pose(ax, robot_pose[0:2], robot_pose[2], color='red')

        samples_x = []
        samples_y = []
        for i in range(500):
            point = fansensor.uniform_sample_sensor_region(robot_pose)
            samples_x.append(point[0])
            samples_y.append(point[1])
            assert fansensor.in_range(point, robot_pose)

        if show_plots:
            ax.scatter(samples_x, samples_y, zorder=1, s=50, alpha=0.6)
            ax.set_xlim(0, w)
            ax.set_ylim(0, l)
            ax.set_aspect("equal")
    if show_plots:
        plt.show(block=False)
        plt.pause(1)
        plt.close()

@pytest.mark.skip(reason="test takes too long.")
def test_fansensor3d_geometry(fansensor_big, dim, show_plots):
    if show_plots:
        fig, ax = plt.subplots()

    assert 0 < pitch_facing((0,0,0), (0.2,5,3)) < 90
    assert 0 < pitch_facing((0,0,0), (0.2,5,-3)) < 180
    assert 180 < pitch_facing((2,2,0), (0,5,-3)) < 270

    fan2d = fansensor_big

    fan3d = FanSensor3D(max_range=fan2d.max_range,
                        min_range=fan2d.min_range,
                        fov=fan2d.fov,
                        v_angles=[-30, 0, 30, 60])

    assert fan3d._project2d((0, 0, 0, 0, 0)) == fan2d

    w, l = dim
    thetas = [60, 225]
    pitches = [-60, -45, -30, -15, 0, 15, 30, 45, 60]
    heights = [0, 3]
    robot_pos = (10, 10)
    for k in range(len(heights)):
        height = heights[k]
        for i in range(len(thetas)):
            th = thetas[i]
            for j in range(len(pitches)):
                pitch = pitches[j]
                x = random.uniform(2, w-2)
                y = random.uniform(2, l-2)
                robot_pose = (*robot_pos, height, pitch, th)

                if show_plots:
                    plot_pose(ax, robot_pose[0:2], robot_pose[2], color='red')

                samples_x = []
                samples_y = []
                for i in range(200):
                    point = fan3d.uniform_sample_sensor_region(robot_pose)
                    samples_x.append(point[0])
                    samples_y.append(point[1])
                    assert fan3d.in_range(point, robot_pose)

                if show_plots:
                    ax.scatter(samples_x, samples_y, zorder=1, s=50, alpha=0.6)
                    ax.set_xlim(0, w)
                    ax.set_ylim(0, l)
                    ax.set_aspect("equal")
                    ax.set_title(f"Test FanSensor3D ({robot_pose})")

                    if i == j == k == 0:
                        plt.show(block=False)
                    plt.pause(1)
                    ax.clear()


@pytest.fixture
def camera():
    return FrustumCamera(fov=60, aspect_ratio=0.75, near=1, far=10)

@pytest.fixture
def camera_medium():
    return FrustumCamera(fov=60, aspect_ratio=0.75, near=1, far=20)


@pytest.fixture
def camera_far():
    return FrustumCamera(fov=60, aspect_ratio=0.75, near=1, far=30)


@pytest.mark.skip(reason="test takes too long.")
def test_frustum_camera(camera, show_plots):
    points = []
    w, l, h = 30, 30, 30
    for i in range(50000):
        x = random.uniform(0,w)
        y = random.uniform(0,l)
        z = random.uniform(0,h)
        points.append((x,y,z))

    if show_plots:
        fig = plt.gcf()
        ax = fig.add_subplot(1,1,1,projection="3d")

    for i, th in enumerate([0, 45, 90, 135, 180, 225, 270, 315]):
        pose = (15, 15, 15, *euler_to_quat(0, th, 0))

        # First, plot the FOV using get_volume
        points_in_volume = camera.get_volume(pose)
        valid_points = []
        for p in points_in_volume:
            if camera.in_range(p, pose):
                valid_points.append(p)
        valid_points = np.array(valid_points)
        if show_plots:
            px = valid_points[:, 0]
            py = valid_points[:, 1]
            pz = valid_points[:, 2]
            ax.scatter(px, py, pz)

        # Then, plot FOV based on sampled continuous points in the space
        if show_plots:
            plot_camera_fov(camera, pose, (w,l,h), points, ax)
            ax.set_xlabel("X")
            ax.set_ylabel("Y")
            ax.set_zlabel("Z")
            ax.set_title("Test FrustumCamera (th=%d)" % th)
            if i == 0:
                plt.show(block=False)
            plt.pause(1)
            ax.clear()


def plot_camera_fov(camera, pose, dim, points, ax):
    w, l, h = dim
    px = []
    py = []
    pz = []
    pc = []
    for x, y, z in points:
        if camera.in_range((x,y,z), pose):
            pc.append("gray")
            px.append(x)
            py.append(y)
            pz.append(z)
    ax.scatter(px, py, pz, c=pc)
    ax.set_xlim(-1, w)
    ax.set_ylim(-1, l)
    ax.set_zlim(-1, h)


########### test visible volume
@pytest.fixture
def occupancy_octree():
    # These come from a test with point cloud data from a real map
    region = ((0, 0, 0), 40.0, 40.0, 25.0)
    octree_dist = OccupancyOctreeDistribution((64, 64, 64), region)
    obstacles = [((38, 29, 1), 1, 1, 1), ((36, 28, 1), 1, 1, 1), ((38, 30, 2), 1, 1, 1), ((37, 28, 2), 1, 1, 1), ((34, 30, 2), 1, 1, 1), ((34, 31, 2), 1, 1, 1), ((32, 30, 2), 1, 1, 1), ((33, 30, 2), 1, 1, 1), ((33, 30, 3), 1, 1, 1), ((32, 30, 3), 1, 1, 1), ((33, 28, 3), 1, 1, 1), ((32, 29, 2), 1, 1, 1), ((32, 28, 3), 1, 1, 1), ((38, 25, 2), 1, 1, 1), ((39, 24, 3), 1, 1, 1), ((39, 25, 2), 1, 1, 1), ((38, 24, 2), 1, 1, 1), ((37, 25, 2), 1, 1, 1), ((37, 25, 3), 1, 1, 1), ((36, 24, 3), 1, 1, 1), ((36, 26, 2), 1, 1, 1), ((38, 29, 5), 1, 1, 1), ((39, 29, 5), 1, 1, 1), ((39, 28, 5), 1, 1, 1), ((38, 28, 5), 1, 1, 1), ((37, 29, 5), 1, 1, 1), ((36, 29, 4), 1, 1, 1), ((37, 28, 5), 1, 1, 1), ((36, 29, 5), 1, 1, 1), ((36, 28, 4), 1, 1, 1), ((36, 30, 5), 1, 1, 1), ((37, 30, 5), 1, 1, 1), ((36, 30, 4), 1, 1, 1), ((37, 29, 6), 1, 1, 1), ((36, 29, 6), 1, 1, 1), ((37, 28, 6), 1, 1, 1), ((36, 29, 7), 1, 1, 1), ((36, 28, 6), 1, 1, 1), ((39, 29, 6), 1, 1, 1), ((38, 29, 7), 1, 1, 1), ((39, 29, 7), 1, 1, 1), ((39, 28, 7), 1, 1, 1), ((39, 30, 6), 1, 1, 1), ((38, 31, 7), 1, 1, 1), ((38, 30, 7), 1, 1, 1), ((38, 30, 5), 1, 1, 1), ((39, 30, 5), 1, 1, 1), ((36, 30, 6), 1, 1, 1), ((37, 30, 6), 1, 1, 1), ((38, 24, 5), 1, 1, 1), ((39, 25, 5), 1, 1, 1), ((38, 24, 6), 1, 1, 1), ((38, 25, 7), 1, 1, 1), ((39, 24, 6), 1, 1, 1), ((39, 25, 7), 1, 1, 1), ((38, 25, 6), 1, 1, 1), ((37, 24, 7), 1, 1, 1), ((36, 25, 6), 1, 1, 1), ((36, 24, 6), 1, 1, 1), ((37, 25, 6), 1, 1, 1), ((36, 25, 4), 1, 1, 1), ((36, 27, 6), 1, 1, 1), ((39, 27, 6), 1, 1, 1), ((39, 26, 7), 1, 1, 1), ((33, 29, 6), 1, 1, 1), ((32, 29, 7), 1, 1, 1), ((32, 29, 6), 1, 1, 1), ((33, 29, 7), 1, 1, 1), ((32, 28, 6), 1, 1, 1), ((35, 29, 6), 1, 1, 1), ((35, 28, 6), 1, 1, 1), ((35, 29, 7), 1, 1, 1), ((32, 29, 5), 1, 1, 1), ((33, 29, 5), 1, 1, 1), ((32, 28, 4), 1, 1, 1), ((33, 30, 5), 1, 1, 1), ((32, 30, 6), 1, 1, 1), ((34, 30, 4), 1, 1, 1), ((35, 30, 6), 1, 1, 1), ((35, 30, 7), 1, 1, 1), ((34, 29, 5), 1, 1, 1), ((32, 27, 3), 1, 1, 1), ((34, 25, 2), 1, 1, 1), ((34, 24, 2), 1, 1, 1), ((35, 25, 2), 1, 1, 1), ((35, 26, 2), 1, 1, 1), ((35, 26, 6), 1, 1, 1), ((35, 25, 6), 1, 1, 1), ((34, 20, 1), 1, 1, 1), ((33, 21, 2), 1, 1, 1), ((34, 22, 3), 1, 1, 1), ((34, 21, 2), 1, 1, 1), ((37, 21, 2), 1, 1, 1), ((38, 22, 2), 1, 1, 1), ((39, 23, 2), 1, 1, 1), ((39, 20, 2), 1, 1, 1), ((38, 18, 2), 1, 1, 1), ((33, 18, 2), 1, 1, 1), ((34, 17, 3), 1, 1, 1), ((34, 19, 2), 1, 1, 1), ((34, 30, 10), 1, 1, 1), ((34, 30, 11), 1, 1, 1), ((32, 29, 10), 1, 1, 1), ((33, 29, 10), 1, 1, 1), ((32, 29, 11), 1, 1, 1), ((33, 29, 11), 1, 1, 1), ((33, 29, 9), 1, 1, 1), ((32, 29, 8), 1, 1, 1), ((32, 28, 9), 1, 1, 1), ((33, 29, 8), 1, 1, 1), ((32, 29, 9), 1, 1, 1), ((32, 28, 8), 1, 1, 1), ((34, 29, 11), 1, 1, 1), ((35, 29, 10), 1, 1, 1), ((35, 29, 11), 1, 1, 1), ((34, 29, 10), 1, 1, 1), ((35, 29, 9), 1, 1, 1), ((35, 29, 8), 1, 1, 1), ((34, 30, 8), 1, 1, 1), ((34, 30, 9), 1, 1, 1), ((32, 30, 8), 1, 1, 1), ((32, 30, 11), 1, 1, 1), ((33, 30, 10), 1, 1, 1), ((37, 30, 8), 1, 1, 1), ((36, 30, 8), 1, 1, 1), ((39, 30, 8), 1, 1, 1), ((38, 30, 9), 1, 1, 1), ((39, 30, 9), 1, 1, 1), ((38, 30, 8), 1, 1, 1), ((38, 30, 10), 1, 1, 1), ((39, 30, 10), 1, 1, 1), ((37, 29, 10), 1, 1, 1), ((36, 29, 10), 1, 1, 1), ((37, 29, 11), 1, 1, 1), ((36, 30, 10), 1, 1, 1), ((36, 30, 11), 1, 1, 1), ((37, 30, 10), 1, 1, 1), ((37, 31, 10), 1, 1, 1), ((38, 29, 8), 1, 1, 1), ((39, 29, 8), 1, 1, 1), ((36, 29, 8), 1, 1, 1), ((39, 29, 11), 1, 1, 1), ((38, 29, 10), 1, 1, 1), ((37, 30, 13), 1, 1, 1), ((36, 31, 13), 1, 1, 1), ((36, 30, 12), 1, 1, 1), ((36, 30, 13), 1, 1, 1), ((37, 30, 12), 1, 1, 1), ((36, 31, 14), 1, 1, 1), ((36, 30, 14), 1, 1, 1), ((37, 30, 14), 1, 1, 1), ((37, 30, 15), 1, 1, 1), ((36, 29, 15), 1, 1, 1), ((37, 29, 14), 1, 1, 1), ((37, 29, 15), 1, 1, 1), ((39, 29, 15), 1, 1, 1), ((38, 29, 15), 1, 1, 1), ((38, 29, 14), 1, 1, 1), ((39, 29, 14), 1, 1, 1), ((36, 29, 12), 1, 1, 1), ((37, 29, 13), 1, 1, 1), ((37, 29, 12), 1, 1, 1), ((36, 29, 13), 1, 1, 1), ((38, 30, 12), 1, 1, 1), ((39, 30, 12), 1, 1, 1), ((38, 30, 13), 1, 1, 1), ((39, 31, 13), 1, 1, 1), ((38, 29, 12), 1, 1, 1), ((39, 29, 12), 1, 1, 1), ((39, 30, 14), 1, 1, 1), ((38, 30, 15), 1, 1, 1), ((39, 30, 15), 1, 1, 1), ((38, 30, 14), 1, 1, 1), ((33, 29, 13), 1, 1, 1), ((32, 29, 12), 1, 1, 1), ((32, 29, 13), 1, 1, 1), ((32, 28, 12), 1, 1, 1), ((33, 29, 12), 1, 1, 1), ((34, 29, 13), 1, 1, 1), ((35, 29, 12), 1, 1, 1), ((35, 29, 13), 1, 1, 1), ((34, 29, 12), 1, 1, 1), ((34, 29, 14), 1, 1, 1), ((34, 29, 15), 1, 1, 1), ((32, 29, 14), 1, 1, 1), ((33, 29, 14), 1, 1, 1), ((32, 29, 15), 1, 1, 1), ((33, 29, 15), 1, 1, 1), ((35, 30, 12), 1, 1, 1), ((35, 30, 13), 1, 1, 1), ((35, 31, 12), 1, 1, 1), ((34, 30, 13), 1, 1, 1), ((35, 30, 15), 1, 1, 1), ((32, 31, 12), 1, 1, 1), ((33, 30, 12), 1, 1, 1), ((32, 30, 13), 1, 1, 1), ((33, 30, 13), 1, 1, 1), ((34, 15, 1), 1, 1, 1), ((33, 15, 2), 1, 1, 1), ((33, 14, 3), 1, 1, 1), ((32, 14, 2), 1, 1, 1), ((32, 15, 2), 1, 1, 1), ((32, 13, 2), 1, 1, 1), ((37, 14, 2), 1, 1, 1), ((33, 10, 2), 1, 1, 1), ((33, 11, 2), 1, 1, 1), ((33, 0, 2), 1, 1, 1), ((33, 1, 2), 1, 1, 1), ((34, 3, 2), 1, 1, 1), ((34, 4, 2), 1, 1, 1), ((33, 5, 2), 1, 1, 1), ((34, 6, 3), 1, 1, 1), ((36, 4, 3), 1, 1, 1), ((36, 7, 7), 1, 1, 1), ((39, 10, 8), 1, 1, 1), ((37, 7, 8), 1, 1, 1), ((36, 6, 9), 1, 1, 1), ((33, 29, 16), 1, 1, 1), ((32, 29, 17), 1, 1, 1), ((32, 29, 16), 1, 1, 1), ((33, 29, 17), 1, 1, 1), ((34, 30, 16), 1, 1, 1), ((35, 29, 19), 1, 1, 1), ((34, 29, 18), 1, 1, 1), ((35, 29, 18), 1, 1, 1), ((35, 29, 16), 1, 1, 1), ((34, 29, 17), 1, 1, 1), ((35, 29, 17), 1, 1, 1), ((34, 29, 16), 1, 1, 1), ((35, 30, 19), 1, 1, 1), ((32, 29, 19), 1, 1, 1), ((32, 30, 16), 1, 1, 1), ((32, 31, 16), 1, 1, 1), ((38, 30, 18), 1, 1, 1), ((37, 29, 17), 1, 1, 1), ((36, 29, 17), 1, 1, 1), ((37, 29, 16), 1, 1, 1), ((36, 30, 17), 1, 1, 1), ((37, 30, 18), 1, 1, 1), ((36, 30, 18), 1, 1, 1), ((38, 30, 17), 1, 1, 1), ((39, 30, 16), 1, 1, 1), ((38, 29, 16), 1, 1, 1), ((36, 29, 18), 1, 1, 1), ((39, 29, 18), 1, 1, 1), ((34, 27, 17), 1, 1, 1), ((6, 29, 2), 1, 1, 1), ((6, 28, 2), 1, 1, 1), ((6, 29, 3), 1, 1, 1), ((5, 28, 2), 1, 1, 1), ((5, 28, 3), 1, 1, 1), ((4, 28, 3), 1, 1, 1), ((6, 30, 1), 1, 1, 1), ((5, 30, 1), 1, 1, 1), ((7, 30, 3), 1, 1, 1), ((2, 24, 2), 1, 1, 1), ((3, 24, 2), 1, 1, 1), ((2, 25, 3), 1, 1, 1), ((3, 25, 3), 1, 1, 1), ((2, 25, 2), 1, 1, 1), ((1, 24, 2), 1, 1, 1), ((0, 25, 3), 1, 1, 1), ((1, 24, 3), 1, 1, 1), ((1, 25, 2), 1, 1, 1), ((0, 24, 2), 1, 1, 1), ((1, 27, 2), 1, 1, 1), ((2, 26, 3), 1, 1, 1), ((7, 27, 6), 1, 1, 1), ((7, 27, 7), 1, 1, 1), ((7, 26, 6), 1, 1, 1), ((6, 26, 6), 1, 1, 1), ((6, 27, 6), 1, 1, 1), ((5, 26, 6), 1, 1, 1), ((5, 27, 6), 1, 1, 1), ((4, 27, 6), 1, 1, 1), ((4, 27, 7), 1, 1, 1), ((5, 27, 7), 1, 1, 1), ((4, 26, 6), 1, 1, 1), ((5, 26, 7), 1, 1, 1), ((4, 27, 5), 1, 1, 1), ((4, 26, 5), 1, 1, 1), ((5, 26, 5), 1, 1, 1), ((5, 26, 4), 1, 1, 1), ((4, 27, 4), 1, 1, 1), ((5, 27, 5), 1, 1, 1), ((7, 27, 5), 1, 1, 1), ((6, 25, 4), 1, 1, 1), ((6, 28, 7), 1, 1, 1), ((6, 29, 6), 1, 1, 1), ((6, 28, 6), 1, 1, 1), ((6, 29, 7), 1, 1, 1), ((7, 28, 6), 1, 1, 1), ((7, 29, 7), 1, 1, 1), ((7, 28, 7), 1, 1, 1), ((7, 30, 6), 1, 1, 1), ((7, 31, 6), 1, 1, 1), ((6, 30, 7), 1, 1, 1), ((7, 31, 7), 1, 1, 1), ((6, 30, 6), 1, 1, 1), ((5, 30, 5), 1, 1, 1), ((5, 31, 4), 1, 1, 1), ((5, 31, 5), 1, 1, 1), ((5, 30, 7), 1, 1, 1), ((4, 31, 7), 1, 1, 1), ((5, 31, 7), 1, 1, 1), ((4, 30, 7), 1, 1, 1), ((4, 28, 4), 1, 1, 1), ((5, 29, 5), 1, 1, 1), ((5, 28, 5), 1, 1, 1), ((5, 28, 4), 1, 1, 1), ((4, 29, 6), 1, 1, 1), ((5, 28, 6), 1, 1, 1), ((4, 29, 7), 1, 1, 1), ((4, 28, 7), 1, 1, 1), ((5, 28, 7), 1, 1, 1), ((4, 28, 6), 1, 1, 1), ((6, 30, 5), 1, 1, 1), ((7, 30, 5), 1, 1, 1), ((2, 29, 7), 1, 1, 1), ((3, 29, 7), 1, 1, 1), ((2, 29, 6), 1, 1, 1), ((3, 28, 7), 1, 1, 1), ((2, 28, 7), 1, 1, 1), ((3, 29, 6), 1, 1, 1), ((3, 28, 6), 1, 1, 1), ((1, 30, 6), 1, 1, 1), ((1, 30, 7), 1, 1, 1), ((0, 30, 6), 1, 1, 1), ((2, 31, 7), 1, 1, 1), ((2, 30, 7), 1, 1, 1), ((3, 30, 7), 1, 1, 1), ((3, 31, 6), 1, 1, 1), ((1, 29, 6), 1, 1, 1), ((1, 28, 6), 1, 1, 1), ((0, 28, 7), 1, 1, 1), ((0, 28, 6), 1, 1, 1), ((0, 29, 7), 1, 1, 1), ((1, 28, 7), 1, 1, 1), ((3, 31, 5), 1, 1, 1), ((0, 26, 4), 1, 1, 1), ((1, 26, 4), 1, 1, 1), ((1, 27, 5), 1, 1, 1), ((1, 26, 5), 1, 1, 1), ((1, 27, 7), 1, 1, 1), ((0, 26, 7), 1, 1, 1), ((0, 27, 7), 1, 1, 1), ((1, 26, 7), 1, 1, 1), ((0, 26, 6), 1, 1, 1), ((1, 26, 6), 1, 1, 1), ((0, 27, 6), 1, 1, 1), ((2, 26, 6), 1, 1, 1), ((2, 26, 7), 1, 1, 1), ((3, 27, 6), 1, 1, 1), ((3, 26, 7), 1, 1, 1), ((3, 27, 7), 1, 1, 1), ((2, 27, 7), 1, 1, 1), ((0, 25, 7), 1, 1, 1), ((1, 25, 6), 1, 1, 1), ((1, 25, 7), 1, 1, 1), ((2, 25, 5), 1, 1, 1), ((3, 26, 5), 1, 1, 1), ((3, 27, 5), 1, 1, 1), ((2, 25, 7), 1, 1, 1), ((5, 27, 2), 1, 1, 1), ((5, 27, 3), 1, 1, 1), ((5, 26, 2), 1, 1, 1), ((4, 27, 3), 1, 1, 1), ((5, 26, 3), 1, 1, 1), ((5, 24, 2), 1, 1, 1), ((4, 24, 2), 1, 1, 1), ((4, 25, 3), 1, 1, 1), ((5, 24, 3), 1, 1, 1), ((4, 25, 2), 1, 1, 1), ((6, 25, 2), 1, 1, 1), ((7, 24, 2), 1, 1, 1), ((6, 25, 3), 1, 1, 1), ((7, 25, 2), 1, 1, 1), ((6, 26, 2), 1, 1, 1), ((7, 26, 2), 1, 1, 1), ((6, 27, 2), 1, 1, 1), ((7, 26, 3), 1, 1, 1), ((7, 27, 3), 1, 1, 1), ((3, 31, 1), 1, 1, 1), ((3, 31, 2), 1, 1, 1), ((3, 30, 3), 1, 1, 1), ((2, 28, 2), 1, 1, 1), ((1, 29, 1), 1, 1, 1), ((13, 28, 2), 1, 1, 1), ((13, 28, 3), 1, 1, 1), ((14, 29, 1), 1, 1, 1), ((14, 29, 2), 1, 1, 1), ((15, 28, 2), 1, 1, 1), ((10, 28, 3), 1, 1, 1), ((11, 28, 3), 1, 1, 1), ((10, 28, 2), 1, 1, 1), ((8, 28, 1), 1, 1, 1), ((10, 30, 2), 1, 1, 1), ((9, 28, 3), 1, 1, 1), ((9, 29, 2), 1, 1, 1), ((8, 29, 2), 1, 1, 1), ((12, 28, 6), 1, 1, 1), ((13, 28, 7), 1, 1, 1), ((13, 28, 6), 1, 1, 1), ((12, 28, 7), 1, 1, 1), ((12, 28, 5), 1, 1, 1), ((13, 28, 5), 1, 1, 1), ((13, 28, 4), 1, 1, 1), ((14, 29, 5), 1, 1, 1), ((14, 28, 5), 1, 1, 1), ((14, 28, 6), 1, 1, 1), ((14, 28, 7), 1, 1, 1), ((14, 27, 7), 1, 1, 1), ((15, 26, 7), 1, 1, 1), ((14, 27, 6), 1, 1, 1), ((15, 27, 6), 1, 1, 1), ((15, 27, 7), 1, 1, 1), ((15, 26, 5), 1, 1, 1), ((15, 27, 5), 1, 1, 1), ((14, 27, 5), 1, 1, 1), ((15, 26, 4), 1, 1, 1), ((14, 27, 4), 1, 1, 1), ((15, 25, 7), 1, 1, 1), ((13, 25, 5), 1, 1, 1), ((13, 27, 5), 1, 1, 1), ((13, 27, 4), 1, 1, 1), ((13, 27, 6), 1, 1, 1), ((13, 26, 7), 1, 1, 1), ((12, 26, 6), 1, 1, 1), ((13, 27, 7), 1, 1, 1), ((13, 26, 2), 1, 1, 1), ((15, 27, 2), 1, 1, 1), ((15, 26, 3), 1, 1, 1), ((14, 27, 2), 1, 1, 1), ((14, 26, 3), 1, 1, 1), ((15, 25, 2), 1, 1, 1), ((14, 25, 2), 1, 1, 1), ((14, 25, 3), 1, 1, 1), ((12, 25, 3), 1, 1, 1), ((10, 28, 7), 1, 1, 1), ((11, 28, 6), 1, 1, 1), ((11, 28, 7), 1, 1, 1), ((10, 29, 6), 1, 1, 1), ((10, 29, 7), 1, 1, 1), ((10, 28, 6), 1, 1, 1), ((8, 31, 4), 1, 1, 1), ((9, 30, 4), 1, 1, 1), ((9, 30, 5), 1, 1, 1), ((10, 28, 5), 1, 1, 1), ((10, 28, 4), 1, 1, 1), ((11, 28, 4), 1, 1, 1), ((11, 28, 5), 1, 1, 1), ((10, 29, 5), 1, 1, 1), ((9, 30, 7), 1, 1, 1), ((8, 30, 6), 1, 1, 1), ((8, 31, 7), 1, 1, 1), ((8, 30, 7), 1, 1, 1), ((8, 28, 7), 1, 1, 1), ((8, 29, 7), 1, 1, 1), ((9, 29, 6), 1, 1, 1), ((9, 29, 7), 1, 1, 1), ((9, 28, 7), 1, 1, 1), ((10, 30, 5), 1, 1, 1), ((10, 30, 7), 1, 1, 1), ((9, 28, 4), 1, 1, 1), ((9, 29, 5), 1, 1, 1), ((8, 27, 6), 1, 1, 1), ((9, 27, 6), 1, 1, 1), ((9, 27, 7), 1, 1, 1), ((8, 26, 6), 1, 1, 1), ((8, 27, 7), 1, 1, 1), ((9, 26, 7), 1, 1, 1), ((9, 25, 4), 1, 1, 1), ((9, 24, 4), 1, 1, 1), ((10, 25, 4), 1, 1, 1), ((10, 26, 6), 1, 1, 1), ((10, 27, 6), 1, 1, 1), ((10, 27, 7), 1, 1, 1), ((9, 27, 4), 1, 1, 1), ((8, 26, 5), 1, 1, 1), ((9, 26, 5), 1, 1, 1), ((9, 27, 5), 1, 1, 1), ((9, 26, 4), 1, 1, 1), ((10, 27, 5), 1, 1, 1), ((10, 26, 4), 1, 1, 1), ((8, 26, 2), 1, 1, 1), ((8, 27, 2), 1, 1, 1), ((9, 26, 2), 1, 1, 1), ((9, 27, 3), 1, 1, 1), ((8, 27, 3), 1, 1, 1), ((8, 25, 2), 1, 1, 1), ((9, 25, 2), 1, 1, 1), ((8, 25, 3), 1, 1, 1), ((10, 25, 2), 1, 1, 1), ((10, 27, 3), 1, 1, 1), ((10, 26, 2), 1, 1, 1), ((11, 26, 3), 1, 1, 1), ((10, 27, 2), 1, 1, 1), ((11, 27, 3), 1, 1, 1), ((9, 20, 2), 1, 1, 1), ((11, 20, 2), 1, 1, 1), ((12, 20, 2), 1, 1, 1), ((13, 20, 3), 1, 1, 1), ((15, 20, 3), 1, 1, 1), ((15, 20, 2), 1, 1, 1), ((14, 20, 2), 1, 1, 1), ((15, 16, 2), 1, 1, 1), ((12, 19, 3), 1, 1, 1), ((3, 20, 2), 1, 1, 1), ((2, 20, 3), 1, 1, 1), ((1, 20, 2), 1, 1, 1), ((3, 23, 3), 1, 1, 1), ((7, 20, 2), 1, 1, 1), ((6, 20, 3), 1, 1, 1), ((7, 19, 2), 1, 1, 1), ((6, 19, 2), 1, 1, 1), ((2, 19, 2), 1, 1, 1), ((14, 28, 8), 1, 1, 1), ((14, 28, 9), 1, 1, 1), ((12, 28, 11), 1, 1, 1), ((13, 28, 11), 1, 1, 1), ((12, 28, 10), 1, 1, 1), ((13, 29, 10), 1, 1, 1), ((12, 29, 10), 1, 1, 1), ((13, 28, 10), 1, 1, 1), ((13, 30, 9), 1, 1, 1), ((12, 31, 9), 1, 1, 1), ((12, 28, 8), 1, 1, 1), ((13, 28, 8), 1, 1, 1), ((13, 28, 9), 1, 1, 1), ((12, 28, 9), 1, 1, 1), ((12, 29, 8), 1, 1, 1), ((13, 29, 8), 1, 1, 1), ((14, 28, 11), 1, 1, 1), ((15, 28, 10), 1, 1, 1), ((14, 29, 10), 1, 1, 1), ((14, 28, 10), 1, 1, 1), ((15, 28, 11), 1, 1, 1), ((10, 28, 11), 1, 1, 1), ((10, 29, 10), 1, 1, 1), ((10, 28, 10), 1, 1, 1), ((11, 28, 10), 1, 1, 1), ((11, 28, 11), 1, 1, 1), ((8, 30, 9), 1, 1, 1), ((9, 31, 8), 1, 1, 1), ((9, 30, 8), 1, 1, 1), ((8, 31, 9), 1, 1, 1), ((11, 28, 9), 1, 1, 1), ((11, 29, 8), 1, 1, 1), ((11, 29, 9), 1, 1, 1), ((10, 28, 8), 1, 1, 1), ((10, 29, 8), 1, 1, 1), ((10, 28, 9), 1, 1, 1), ((11, 28, 8), 1, 1, 1), ((8, 29, 10), 1, 1, 1), ((8, 28, 11), 1, 1, 1), ((9, 28, 10), 1, 1, 1), ((8, 29, 11), 1, 1, 1), ((8, 28, 10), 1, 1, 1), ((9, 28, 11), 1, 1, 1), ((10, 31, 10), 1, 1, 1), ((10, 30, 10), 1, 1, 1), ((8, 29, 8), 1, 1, 1), ((8, 28, 8), 1, 1, 1), ((9, 29, 8), 1, 1, 1), ((8, 28, 9), 1, 1, 1), ((9, 28, 9), 1, 1, 1), ((9, 29, 9), 1, 1, 1), ((9, 30, 11), 1, 1, 1), ((8, 30, 11), 1, 1, 1), ((8, 30, 10), 1, 1, 1), ((8, 31, 10), 1, 1, 1), ((8, 31, 11), 1, 1, 1), ((15, 27, 10), 1, 1, 1), ((14, 27, 10), 1, 1, 1), ((15, 27, 11), 1, 1, 1), ((14, 27, 11), 1, 1, 1), ((14, 26, 11), 1, 1, 1), ((13, 27, 11), 1, 1, 1), ((12, 26, 10), 1, 1, 1), ((12, 27, 9), 1, 1, 1), ((13, 27, 9), 1, 1, 1), ((14, 27, 9), 1, 1, 1), ((14, 27, 8), 1, 1, 1), ((15, 27, 9), 1, 1, 1), ((15, 27, 8), 1, 1, 1), ((11, 27, 10), 1, 1, 1), ((11, 26, 10), 1, 1, 1), ((11, 27, 11), 1, 1, 1), ((11, 27, 8), 1, 1, 1), ((10, 27, 9), 1, 1, 1), ((10, 27, 8), 1, 1, 1), ((11, 27, 9), 1, 1, 1), ((9, 24, 8), 1, 1, 1), ((8, 27, 10), 1, 1, 1), ((9, 26, 11), 1, 1, 1), ((10, 25, 10), 1, 1, 1), ((10, 25, 11), 1, 1, 1), ((8, 27, 9), 1, 1, 1), ((9, 27, 9), 1, 1, 1), ((11, 29, 12), 1, 1, 1), ((10, 28, 12), 1, 1, 1), ((10, 29, 12), 1, 1, 1), ((10, 29, 13), 1, 1, 1), ((11, 28, 12), 1, 1, 1), ((10, 28, 13), 1, 1, 1), ((10, 28, 14), 1, 1, 1), ((10, 28, 15), 1, 1, 1), ((11, 29, 14), 1, 1, 1), ((11, 28, 14), 1, 1, 1), ((10, 29, 14), 1, 1, 1), ((9, 29, 15), 1, 1, 1), ((10, 31, 14), 1, 1, 1), ((10, 30, 14), 1, 1, 1), ((10, 30, 15), 1, 1, 1), ((10, 30, 12), 1, 1, 1), ((10, 30, 13), 1, 1, 1), ((9, 29, 12), 1, 1, 1), ((9, 31, 12), 1, 1, 1), ((9, 30, 12), 1, 1, 1), ((13, 28, 12), 1, 1, 1), ((13, 28, 13), 1, 1, 1), ((13, 29, 12), 1, 1, 1), ((12, 28, 13), 1, 1, 1), ((12, 28, 12), 1, 1, 1), ((14, 28, 12), 1, 1, 1), ((15, 28, 13), 1, 1, 1), ((14, 29, 12), 1, 1, 1), ((14, 28, 13), 1, 1, 1), ((14, 29, 13), 1, 1, 1), ((12, 28, 14), 1, 1, 1), ((13, 28, 15), 1, 1, 1), ((13, 28, 14), 1, 1, 1), ((12, 28, 15), 1, 1, 1), ((15, 28, 14), 1, 1, 1), ((14, 28, 14), 1, 1, 1), ((14, 29, 15), 1, 1, 1), ((14, 28, 15), 1, 1, 1), ((14, 30, 13), 1, 1, 1), ((15, 27, 12), 1, 1, 1), ((15, 27, 13), 1, 1, 1), ((14, 27, 12), 1, 1, 1), ((14, 26, 12), 1, 1, 1), ((15, 27, 15), 1, 1, 1), ((14, 27, 14), 1, 1, 1), ((15, 27, 14), 1, 1, 1), ((13, 26, 13), 1, 1, 1), ((10, 27, 12), 1, 1, 1), ((10, 26, 13), 1, 1, 1), ((11, 27, 13), 1, 1, 1), ((10, 27, 13), 1, 1, 1), ((10, 27, 14), 1, 1, 1), ((10, 25, 15), 1, 1, 1), ((0, 29, 8), 1, 1, 1), ((0, 28, 8), 1, 1, 1), ((2, 29, 8), 1, 1, 1), ((0, 31, 8), 1, 1, 1), ((3, 30, 11), 1, 1, 1), ((0, 27, 8), 1, 1, 1), ((1, 27, 8), 1, 1, 1), ((5, 29, 8), 1, 1, 1), ((7, 28, 11), 1, 1, 1), ((7, 28, 10), 1, 1, 1), ((7, 31, 8), 1, 1, 1), ((7, 30, 8), 1, 1, 1), ((6, 29, 8), 1, 1, 1), ((7, 28, 8), 1, 1, 1), ((7, 27, 8), 1, 1, 1), ((14, 22, 13), 1, 1, 1), ((12, 20, 14), 1, 1, 1), ((11, 23, 15), 1, 1, 1), ((21, 28, 2), 1, 1, 1), ((21, 29, 2), 1, 1, 1), ((20, 28, 2), 1, 1, 1), ((20, 28, 3), 1, 1, 1), ((23, 28, 2), 1, 1, 1), ((22, 28, 3), 1, 1, 1), ((22, 30, 3), 1, 1, 1), ((20, 30, 2), 1, 1, 1), ((19, 27, 3), 1, 1, 1), ((19, 26, 2), 1, 1, 1), ((18, 25, 2), 1, 1, 1), ((17, 26, 2), 1, 1, 1), ((23, 26, 2), 1, 1, 1), ((23, 27, 2), 1, 1, 1), ((20, 27, 3), 1, 1, 1), ((20, 27, 2), 1, 1, 1), ((20, 26, 3), 1, 1, 1), ((21, 27, 2), 1, 1, 1), ((21, 26, 2), 1, 1, 1), ((21, 25, 2), 1, 1, 1), ((21, 25, 3), 1, 1, 1), ((21, 24, 2), 1, 1, 1), ((22, 25, 2), 1, 1, 1), ((23, 25, 2), 1, 1, 1), ((17, 27, 5), 1, 1, 1), ((16, 27, 5), 1, 1, 1), ((16, 27, 4), 1, 1, 1), ((16, 26, 5), 1, 1, 1), ((18, 27, 5), 1, 1, 1), ((19, 27, 5), 1, 1, 1), ((19, 26, 5), 1, 1, 1), ((17, 27, 7), 1, 1, 1), ((16, 27, 7), 1, 1, 1), ((16, 26, 7), 1, 1, 1), ((16, 27, 6), 1, 1, 1), ((17, 26, 6), 1, 1, 1), ((17, 27, 6), 1, 1, 1), ((18, 27, 7), 1, 1, 1), ((19, 27, 7), 1, 1, 1), ((19, 27, 6), 1, 1, 1), ((18, 27, 6), 1, 1, 1), ((22, 28, 5), 1, 1, 1), ((22, 29, 4), 1, 1, 1), ((22, 29, 5), 1, 1, 1), ((22, 28, 4), 1, 1, 1), ((23, 29, 5), 1, 1, 1), ((21, 28, 7), 1, 1, 1), ((21, 28, 6), 1, 1, 1), ((21, 29, 7), 1, 1, 1), ((20, 28, 6), 1, 1, 1), ((20, 29, 6), 1, 1, 1), ((23, 28, 7), 1, 1, 1), ((23, 29, 6), 1, 1, 1), ((23, 28, 6), 1, 1, 1), ((22, 29, 7), 1, 1, 1), ((22, 28, 7), 1, 1, 1), ((22, 28, 6), 1, 1, 1), ((22, 29, 6), 1, 1, 1), ((23, 27, 6), 1, 1, 1), ((20, 27, 4), 1, 1, 1), ((16, 29, 2), 1, 1, 1), ((16, 29, 3), 1, 1, 1), ((18, 30, 2), 1, 1, 1), ((16, 31, 2), 1, 1, 1), ((16, 29, 5), 1, 1, 1), ((17, 31, 6), 1, 1, 1), ((22, 29, 10), 1, 1, 1), ((23, 29, 11), 1, 1, 1), ((23, 28, 10), 1, 1, 1), ((23, 29, 10), 1, 1, 1), ((22, 28, 11), 1, 1, 1), ((22, 28, 10), 1, 1, 1), ((23, 28, 11), 1, 1, 1), ((21, 29, 10), 1, 1, 1), ((20, 28, 11), 1, 1, 1), ((21, 29, 11), 1, 1, 1), ((21, 28, 11), 1, 1, 1), ((20, 28, 10), 1, 1, 1), ((20, 29, 11), 1, 1, 1), ((21, 28, 10), 1, 1, 1), ((22, 28, 9), 1, 1, 1), ((23, 28, 9), 1, 1, 1), ((23, 28, 8), 1, 1, 1), ((22, 28, 8), 1, 1, 1), ((23, 29, 8), 1, 1, 1), ((21, 28, 9), 1, 1, 1), ((20, 28, 9), 1, 1, 1), ((21, 28, 8), 1, 1, 1), ((20, 29, 9), 1, 1, 1), ((17, 27, 14), 1, 1, 1), ((16, 27, 14), 1, 1, 1), ((17, 27, 15), 1, 1, 1), ((17, 27, 13), 1, 1, 1), ((16, 27, 12), 1, 1, 1), ((16, 27, 13), 1, 1, 1), ((18, 27, 14), 1, 1, 1), ((19, 27, 13), 1, 1, 1), ((18, 27, 13), 1, 1, 1), ((18, 26, 13), 1, 1, 1), ((16, 27, 8), 1, 1, 1), ((17, 27, 8), 1, 1, 1), ((17, 27, 9), 1, 1, 1), ((16, 27, 9), 1, 1, 1), ((18, 27, 9), 1, 1, 1), ((19, 27, 9), 1, 1, 1), ((18, 27, 8), 1, 1, 1), ((19, 27, 8), 1, 1, 1), ((18, 27, 11), 1, 1, 1), ((19, 27, 10), 1, 1, 1), ((18, 27, 10), 1, 1, 1), ((19, 27, 11), 1, 1, 1), ((16, 27, 11), 1, 1, 1), ((17, 27, 10), 1, 1, 1), ((19, 28, 10), 1, 1, 1), ((18, 28, 10), 1, 1, 1), ((19, 28, 8), 1, 1, 1), ((19, 28, 9), 1, 1, 1), ((17, 28, 10), 1, 1, 1), ((17, 28, 11), 1, 1, 1), ((17, 31, 8), 1, 1, 1), ((17, 31, 9), 1, 1, 1), ((17, 30, 10), 1, 1, 1), ((17, 28, 9), 1, 1, 1), ((23, 28, 12), 1, 1, 1), ((22, 28, 12), 1, 1, 1), ((22, 29, 13), 1, 1, 1), ((22, 28, 13), 1, 1, 1), ((23, 28, 13), 1, 1, 1), ((23, 29, 13), 1, 1, 1), ((21, 28, 12), 1, 1, 1), ((20, 28, 12), 1, 1, 1), ((20, 29, 12), 1, 1, 1), ((20, 28, 13), 1, 1, 1), ((21, 28, 13), 1, 1, 1), ((21, 31, 14), 1, 1, 1), ((21, 28, 14), 1, 1, 1), ((21, 29, 14), 1, 1, 1), ((20, 28, 14), 1, 1, 1), ((20, 29, 14), 1, 1, 1), ((21, 29, 15), 1, 1, 1), ((22, 28, 14), 1, 1, 1), ((23, 28, 14), 1, 1, 1), ((23, 28, 15), 1, 1, 1), ((17, 28, 14), 1, 1, 1), ((17, 28, 15), 1, 1, 1), ((16, 28, 14), 1, 1, 1), ((17, 29, 14), 1, 1, 1), ((17, 28, 13), 1, 1, 1), ((16, 28, 13), 1, 1, 1), ((17, 28, 12), 1, 1, 1), ((18, 28, 14), 1, 1, 1), ((19, 28, 14), 1, 1, 1), ((19, 28, 15), 1, 1, 1), ((19, 28, 12), 1, 1, 1), ((19, 28, 13), 1, 1, 1), ((20, 26, 15), 1, 1, 1), ((20, 27, 8), 1, 1, 1), ((27, 28, 7), 1, 1, 1), ((26, 28, 7), 1, 1, 1), ((26, 28, 6), 1, 1, 1), ((27, 28, 6), 1, 1, 1), ((24, 29, 7), 1, 1, 1), ((25, 28, 7), 1, 1, 1), ((24, 28, 6), 1, 1, 1), ((24, 28, 7), 1, 1, 1), ((25, 28, 5), 1, 1, 1), ((24, 28, 5), 1, 1, 1), ((27, 28, 4), 1, 1, 1), ((26, 28, 5), 1, 1, 1), ((27, 28, 5), 1, 1, 1), ((29, 28, 6), 1, 1, 1), ((29, 28, 7), 1, 1, 1), ((28, 28, 6), 1, 1, 1), ((28, 28, 7), 1, 1, 1), ((30, 29, 6), 1, 1, 1), ((30, 29, 7), 1, 1, 1), ((31, 29, 6), 1, 1, 1), ((31, 28, 7), 1, 1, 1), ((31, 29, 7), 1, 1, 1), ((30, 29, 4), 1, 1, 1), ((31, 29, 5), 1, 1, 1), ((31, 28, 4), 1, 1, 1), ((30, 29, 5), 1, 1, 1), ((31, 29, 4), 1, 1, 1), ((28, 28, 5), 1, 1, 1), ((28, 28, 4), 1, 1, 1), ((29, 28, 5), 1, 1, 1), ((26, 24, 3), 1, 1, 1), ((25, 27, 2), 1, 1, 1), ((26, 27, 3), 1, 1, 1), ((26, 27, 2), 1, 1, 1), ((27, 26, 2), 1, 1, 1), ((28, 27, 5), 1, 1, 1), ((30, 27, 4), 1, 1, 1), ((31, 26, 5), 1, 1, 1), ((26, 27, 5), 1, 1, 1), ((27, 27, 5), 1, 1, 1), ((27, 27, 6), 1, 1, 1), ((26, 27, 6), 1, 1, 1), ((26, 27, 7), 1, 1, 1), ((25, 27, 5), 1, 1, 1), ((24, 27, 6), 1, 1, 1), ((25, 27, 7), 1, 1, 1), ((30, 27, 2), 1, 1, 1), ((30, 26, 2), 1, 1, 1), ((31, 27, 3), 1, 1, 1), ((29, 27, 2), 1, 1, 1), ((29, 27, 3), 1, 1, 1), ((28, 27, 2), 1, 1, 1), ((29, 26, 3), 1, 1, 1), ((29, 26, 2), 1, 1, 1), ((28, 26, 2), 1, 1, 1), ((31, 25, 2), 1, 1, 1), ((30, 24, 3), 1, 1, 1), ((28, 24, 3), 1, 1, 1), ((24, 28, 2), 1, 1, 1), ((27, 28, 2), 1, 1, 1), ((27, 31, 1), 1, 1, 1), ((26, 30, 1), 1, 1, 1), ((31, 29, 3), 1, 1, 1), ((31, 28, 2), 1, 1, 1), ((28, 29, 1), 1, 1, 1), ((29, 29, 2), 1, 1, 1), ((26, 28, 8), 1, 1, 1), ((27, 28, 8), 1, 1, 1), ((27, 28, 9), 1, 1, 1), ((27, 28, 11), 1, 1, 1), ((27, 28, 10), 1, 1, 1), ((26, 28, 11), 1, 1, 1), ((26, 29, 10), 1, 1, 1), ((24, 28, 11), 1, 1, 1), ((24, 28, 10), 1, 1, 1), ((24, 28, 8), 1, 1, 1), ((24, 28, 9), 1, 1, 1), ((24, 29, 9), 1, 1, 1), ((25, 28, 8), 1, 1, 1), ((29, 29, 11), 1, 1, 1), ((29, 28, 10), 1, 1, 1), ((28, 28, 10), 1, 1, 1), ((28, 28, 11), 1, 1, 1), ((29, 29, 10), 1, 1, 1), ((31, 29, 11), 1, 1, 1), ((31, 29, 10), 1, 1, 1), ((30, 28, 11), 1, 1, 1), ((30, 29, 11), 1, 1, 1), ((30, 29, 10), 1, 1, 1), ((30, 29, 8), 1, 1, 1), ((31, 29, 8), 1, 1, 1), ((31, 28, 8), 1, 1, 1), ((31, 29, 9), 1, 1, 1), ((29, 29, 9), 1, 1, 1), ((29, 28, 9), 1, 1, 1), ((28, 28, 8), 1, 1, 1), ((29, 28, 8), 1, 1, 1), ((28, 28, 9), 1, 1, 1), ((29, 29, 8), 1, 1, 1), ((26, 28, 14), 1, 1, 1), ((26, 28, 15), 1, 1, 1), ((27, 28, 15), 1, 1, 1), ((27, 28, 14), 1, 1, 1), ((26, 29, 15), 1, 1, 1), ((27, 29, 14), 1, 1, 1), ((26, 29, 14), 1, 1, 1), ((25, 28, 14), 1, 1, 1), ((24, 29, 14), 1, 1, 1), ((24, 28, 14), 1, 1, 1), ((25, 28, 15), 1, 1, 1), ((24, 28, 15), 1, 1, 1), ((25, 29, 14), 1, 1, 1), ((24, 29, 15), 1, 1, 1), ((25, 28, 12), 1, 1, 1), ((25, 28, 13), 1, 1, 1), ((24, 29, 13), 1, 1, 1), ((24, 28, 13), 1, 1, 1), ((27, 28, 13), 1, 1, 1), ((26, 28, 12), 1, 1, 1), ((26, 28, 13), 1, 1, 1), ((27, 28, 12), 1, 1, 1), ((27, 29, 12), 1, 1, 1), ((26, 29, 13), 1, 1, 1), ((29, 29, 13), 1, 1, 1), ((29, 29, 12), 1, 1, 1), ((28, 29, 13), 1, 1, 1), ((28, 28, 13), 1, 1, 1), ((29, 28, 12), 1, 1, 1), ((31, 29, 12), 1, 1, 1), ((30, 29, 13), 1, 1, 1), ((30, 29, 12), 1, 1, 1), ((31, 29, 13), 1, 1, 1), ((31, 28, 13), 1, 1, 1), ((28, 28, 14), 1, 1, 1), ((28, 29, 14), 1, 1, 1), ((29, 29, 14), 1, 1, 1), ((29, 28, 15), 1, 1, 1), ((29, 28, 14), 1, 1, 1), ((31, 29, 15), 1, 1, 1), ((30, 29, 14), 1, 1, 1), ((31, 28, 14), 1, 1, 1), ((30, 29, 15), 1, 1, 1), ((31, 29, 14), 1, 1, 1), ((29, 30, 14), 1, 1, 1), ((25, 27, 8), 1, 1, 1), ((24, 27, 8), 1, 1, 1), ((24, 27, 9), 1, 1, 1), ((26, 27, 9), 1, 1, 1), ((26, 27, 8), 1, 1, 1), ((27, 27, 8), 1, 1, 1), ((31, 27, 13), 1, 1, 1), ((31, 27, 15), 1, 1, 1), ((31, 26, 15), 1, 1, 1), ((30, 26, 14), 1, 1, 1), ((29, 26, 15), 1, 1, 1), ((17, 19, 2), 1, 1, 1), ((16, 19, 2), 1, 1, 1), ((19, 18, 3), 1, 1, 1), ((23, 19, 0), 1, 1, 1), ((21, 18, 3), 1, 1, 1), ((17, 23, 2), 1, 1, 1), ((19, 23, 2), 1, 1, 1), ((20, 21, 3), 1, 1, 1), ((20, 20, 2), 1, 1, 1), ((25, 19, 2), 1, 1, 1), ((27, 16, 3), 1, 1, 1), ((24, 16, 2), 1, 1, 1), ((27, 21, 2), 1, 1, 1), ((24, 20, 2), 1, 1, 1), ((26, 22, 3), 1, 1, 1), ((27, 23, 2), 1, 1, 1), ((26, 23, 2), 1, 1, 1), ((28, 21, 2), 1, 1, 1), ((30, 18, 2), 1, 1, 1), ((28, 19, 2), 1, 1, 1), ((28, 16, 3), 1, 1, 1), ((4, 12, 2), 1, 1, 1), ((6, 13, 2), 1, 1, 1), ((0, 12, 2), 1, 1, 1), ((3, 12, 2), 1, 1, 1), ((2, 12, 2), 1, 1, 1), ((5, 11, 2), 1, 1, 1), ((5, 10, 2), 1, 1, 1), ((6, 9, 2), 1, 1, 1), ((6, 11, 2), 1, 1, 1), ((7, 11, 2), 1, 1, 1), ((4, 9, 2), 1, 1, 1), ((3, 11, 2), 1, 1, 1), ((2, 11, 2), 1, 1, 1), ((0, 10, 2), 1, 1, 1), ((13, 12, 2), 1, 1, 1), ((12, 12, 2), 1, 1, 1), ((15, 14, 2), 1, 1, 1), ((15, 12, 2), 1, 1, 1), ((15, 13, 2), 1, 1, 1), ((15, 8, 2), 1, 1, 1), ((15, 9, 2), 1, 1, 1), ((13, 10, 2), 1, 1, 1), ((12, 11, 2), 1, 1, 1), ((15, 11, 2), 1, 1, 1), ((15, 10, 2), 1, 1, 1), ((13, 9, 2), 1, 1, 1), ((10, 11, 2), 1, 1, 1), ((11, 11, 2), 1, 1, 1), ((9, 11, 2), 1, 1, 1), ((8, 11, 2), 1, 1, 1), ((11, 8, 2), 1, 1, 1), ((10, 8, 2), 1, 1, 1), ((8, 9, 2), 1, 1, 1), ((9, 12, 2), 1, 1, 1), ((8, 12, 2), 1, 1, 1), ((11, 12, 2), 1, 1, 1), ((4, 7, 2), 1, 1, 1), ((0, 5, 2), 1, 1, 1), ((13, 4, 3), 1, 1, 1), ((15, 7, 2), 1, 1, 1), ((15, 6, 2), 1, 1, 1), ((13, 6, 3), 1, 1, 1), ((15, 5, 2), 1, 1, 1), ((15, 4, 2), 1, 1, 1), ((9, 5, 2), 1, 1, 1), ((11, 7, 2), 1, 1, 1), ((8, 6, 2), 1, 1, 1), ((15, 3, 2), 1, 1, 1), ((15, 3, 3), 1, 1, 1), ((12, 2, 3), 1, 1, 1), ((15, 1, 2), 1, 1, 1), ((16, 1, 2), 1, 1, 1), ((16, 0, 2), 1, 1, 1), ((17, 0, 2), 1, 1, 1), ((16, 3, 2), 1, 1, 1), ((16, 2, 2), 1, 1, 1), ((16, 3, 3), 1, 1, 1), ((16, 6, 2), 1, 1, 1), ((17, 6, 2), 1, 1, 1), ((16, 7, 2), 1, 1, 1), ((16, 4, 2), 1, 1, 1), ((16, 5, 2), 1, 1, 1), ((22, 3, 2), 1, 1, 1), ((21, 2, 2), 1, 1, 1), ((20, 2, 2), 1, 1, 1), ((16, 8, 1), 1, 1, 1), ((16, 9, 2), 1, 1, 1), ((16, 8, 2), 1, 1, 1), ((17, 8, 2), 1, 1, 1), ((16, 10, 2), 1, 1, 1), ((17, 15, 2), 1, 1, 1), ((16, 14, 3), 1, 1, 1), ((18, 12, 2), 1, 1, 1), ((16, 13, 2), 1, 1, 1), ((16, 12, 2), 1, 1, 1), ((22, 9, 2), 1, 1, 1), ((25, 4, 2), 1, 1, 1), ((31, 0, 2), 1, 1, 1), ((30, 2, 3), 1, 1, 1), ((31, 6, 2), 1, 1, 1), ((31, 9, 3), 1, 1, 1), ((31, 8, 2), 1, 1, 1), ((31, 15, 2), 1, 1, 1), ((26, 15, 2), 1, 1, 1), ((22, 29, 16), 1, 1, 1), ((23, 28, 17), 1, 1, 1), ((22, 28, 16), 1, 1, 1), ((22, 29, 17), 1, 1, 1), ((23, 28, 16), 1, 1, 1), ((21, 28, 17), 1, 1, 1), ((21, 29, 16), 1, 1, 1), ((21, 28, 16), 1, 1, 1), ((20, 28, 16), 1, 1, 1), ((21, 28, 19), 1, 1, 1), ((21, 28, 18), 1, 1, 1), ((20, 28, 18), 1, 1, 1), ((21, 29, 18), 1, 1, 1), ((23, 28, 18), 1, 1, 1), ((19, 28, 16), 1, 1, 1), ((18, 28, 17), 1, 1, 1), ((18, 28, 16), 1, 1, 1), ((19, 28, 19), 1, 1, 1), ((17, 28, 17), 1, 1, 1), ((16, 28, 16), 1, 1, 1), ((18, 27, 16), 1, 1, 1), ((16, 27, 16), 1, 1, 1), ((30, 29, 16), 1, 1, 1), ((31, 29, 16), 1, 1, 1), ((30, 29, 17), 1, 1, 1), ((31, 28, 16), 1, 1, 1), ((31, 29, 17), 1, 1, 1), ((30, 28, 16), 1, 1, 1), ((28, 29, 18), 1, 1, 1), ((28, 28, 18), 1, 1, 1), ((30, 29, 18), 1, 1, 1), ((30, 29, 19), 1, 1, 1), ((30, 28, 19), 1, 1, 1), ((31, 29, 18), 1, 1, 1), ((31, 29, 19), 1, 1, 1), ((28, 28, 17), 1, 1, 1), ((29, 29, 16), 1, 1, 1), ((28, 28, 16), 1, 1, 1), ((29, 29, 17), 1, 1, 1), ((29, 28, 16), 1, 1, 1), ((29, 28, 17), 1, 1, 1), ((24, 28, 17), 1, 1, 1), ((25, 28, 17), 1, 1, 1), ((25, 28, 16), 1, 1, 1), ((24, 28, 16), 1, 1, 1), ((27, 28, 16), 1, 1, 1), ((26, 28, 17), 1, 1, 1), ((27, 28, 17), 1, 1, 1), ((24, 28, 18), 1, 1, 1), ((25, 28, 19), 1, 1, 1), ((27, 28, 19), 1, 1, 1), ((26, 28, 19), 1, 1, 1), ((26, 28, 18), 1, 1, 1), ((26, 29, 18), 1, 1, 1), ((31, 26, 18), 1, 1, 1), ((14, 28, 16), 1, 1, 1), ((14, 28, 17), 1, 1, 1), ((15, 28, 17), 1, 1, 1), ((15, 28, 16), 1, 1, 1), ((13, 28, 17), 1, 1, 1), ((13, 28, 16), 1, 1, 1), ((12, 28, 16), 1, 1, 1), ((12, 28, 17), 1, 1, 1), ((13, 28, 18), 1, 1, 1), ((15, 27, 17), 1, 1, 1), ((13, 27, 16), 1, 1, 1), ((12, 27, 16), 1, 1, 1), ((13, 27, 18), 1, 1, 1), ((15, 27, 18), 1, 1, 1), ((11, 31, 16), 1, 1, 1), ((10, 30, 16), 1, 1, 1), ((10, 28, 16), 1, 1, 1), ((10, 29, 16), 1, 1, 1), ((10, 28, 18), 1, 1, 1), ((10, 28, 19), 1, 1, 1), ((8, 30, 18), 1, 1, 1), ((11, 27, 19), 1, 1, 1), ((11, 27, 16), 1, 1, 1), ((5, 30, 18), 1, 1, 1), ((5, 31, 19), 1, 1, 1), ((4, 30, 18), 1, 1, 1), ((6, 31, 16), 1, 1, 1), ((4, 31, 17), 1, 1, 1), ((5, 31, 17), 1, 1, 1), ((7, 30, 18), 1, 1, 1), ((5, 28, 17), 1, 1, 1), ((3, 31, 19), 1, 1, 1), ((3, 31, 18), 1, 1, 1), ((2, 30, 18), 1, 1, 1), ((3, 30, 18), 1, 1, 1), ((2, 29, 17), 1, 1, 1), ((0, 29, 16), 1, 1, 1), ((3, 30, 16), 1, 1, 1), ((3, 30, 17), 1, 1, 1), ((0, 29, 18), 1, 1, 1), ((0, 29, 19), 1, 1, 1), ((0, 30, 17), 1, 1, 1), ((1, 30, 18), 1, 1, 1), ((3, 32, 13), 1, 1, 1), ((3, 32, 12), 1, 1, 1), ((2, 32, 12), 1, 1, 1), ((2, 32, 13), 1, 1, 1), ((2, 32, 15), 1, 1, 1), ((3, 32, 14), 1, 1, 1), ((2, 32, 14), 1, 1, 1), ((3, 32, 15), 1, 1, 1), ((2, 33, 14), 1, 1, 1), ((1, 32, 15), 1, 1, 1), ((0, 32, 14), 1, 1, 1), ((1, 32, 14), 1, 1, 1), ((0, 32, 15), 1, 1, 1), ((1, 32, 12), 1, 1, 1), ((0, 32, 13), 1, 1, 1), ((0, 32, 8), 1, 1, 1), ((1, 32, 8), 1, 1, 1), ((1, 32, 9), 1, 1, 1), ((0, 32, 9), 1, 1, 1), ((3, 32, 8), 1, 1, 1), ((3, 32, 9), 1, 1, 1), ((2, 32, 8), 1, 1, 1), ((2, 32, 9), 1, 1, 1), ((3, 32, 10), 1, 1, 1), ((2, 32, 11), 1, 1, 1), ((3, 32, 11), 1, 1, 1), ((3, 33, 10), 1, 1, 1), ((2, 32, 10), 1, 1, 1), ((0, 32, 10), 1, 1, 1), ((1, 32, 10), 1, 1, 1), ((0, 32, 11), 1, 1, 1), ((1, 32, 11), 1, 1, 1), ((4, 32, 9), 1, 1, 1), ((5, 33, 9), 1, 1, 1), ((4, 32, 8), 1, 1, 1), ((5, 32, 8), 1, 1, 1), ((5, 32, 10), 1, 1, 1), ((4, 32, 11), 1, 1, 1), ((4, 33, 11), 1, 1, 1), ((5, 32, 11), 1, 1, 1), ((7, 33, 10), 1, 1, 1), ((6, 32, 10), 1, 1, 1), ((7, 32, 11), 1, 1, 1), ((7, 33, 11), 1, 1, 1), ((6, 33, 10), 1, 1, 1), ((7, 32, 10), 1, 1, 1), ((6, 32, 9), 1, 1, 1), ((7, 32, 9), 1, 1, 1), ((6, 32, 8), 1, 1, 1), ((5, 32, 12), 1, 1, 1), ((4, 32, 12), 1, 1, 1), ((5, 32, 13), 1, 1, 1), ((4, 32, 14), 1, 1, 1), ((5, 33, 14), 1, 1, 1), ((5, 33, 15), 1, 1, 1), ((4, 32, 15), 1, 1, 1), ((5, 32, 15), 1, 1, 1), ((5, 32, 14), 1, 1, 1), ((4, 33, 15), 1, 1, 1), ((6, 32, 13), 1, 1, 1), ((6, 32, 12), 1, 1, 1), ((7, 32, 12), 1, 1, 1), ((7, 32, 13), 1, 1, 1), ((6, 32, 14), 1, 1, 1), ((7, 32, 15), 1, 1, 1), ((7, 32, 14), 1, 1, 1), ((6, 32, 15), 1, 1, 1), ((10, 32, 13), 1, 1, 1), ((10, 33, 12), 1, 1, 1), ((8, 33, 12), 1, 1, 1), ((9, 33, 12), 1, 1, 1), ((9, 32, 12), 1, 1, 1), ((8, 32, 13), 1, 1, 1), ((8, 32, 12), 1, 1, 1), ((9, 32, 15), 1, 1, 1), ((8, 32, 15), 1, 1, 1), ((9, 33, 14), 1, 1, 1), ((9, 33, 15), 1, 1, 1), ((8, 33, 14), 1, 1, 1), ((8, 32, 14), 1, 1, 1), ((11, 34, 13), 1, 1, 1), ((10, 32, 15), 1, 1, 1), ((9, 33, 10), 1, 1, 1), ((8, 33, 11), 1, 1, 1), ((8, 32, 10), 1, 1, 1), ((9, 33, 11), 1, 1, 1), ((9, 32, 10), 1, 1, 1), ((9, 32, 11), 1, 1, 1), ((8, 32, 11), 1, 1, 1), ((8, 33, 10), 1, 1, 1), ((10, 32, 10), 1, 1, 1), ((9, 32, 9), 1, 1, 1), ((9, 32, 8), 1, 1, 1), ((8, 32, 9), 1, 1, 1), ((7, 32, 6), 1, 1, 1), ((6, 33, 7), 1, 1, 1), ((7, 32, 7), 1, 1, 1), ((6, 32, 7), 1, 1, 1), ((5, 32, 6), 1, 1, 1), ((5, 32, 7), 1, 1, 1), ((4, 33, 7), 1, 1, 1), ((6, 32, 4), 1, 1, 1), ((7, 32, 5), 1, 1, 1), ((6, 32, 5), 1, 1, 1), ((5, 32, 4), 1, 1, 1), ((4, 32, 5), 1, 1, 1), ((5, 34, 5), 1, 1, 1), ((2, 32, 7), 1, 1, 1), ((3, 32, 7), 1, 1, 1), ((2, 33, 0), 1, 1, 1), ((3, 32, 2), 1, 1, 1), ((5, 35, 2), 1, 1, 1), ((5, 33, 1), 1, 1, 1), ((6, 32, 2), 1, 1, 1), ((5, 36, 3), 1, 1, 1), ((9, 32, 6), 1, 1, 1), ((8, 33, 6), 1, 1, 1), ((8, 33, 7), 1, 1, 1), ((8, 32, 7), 1, 1, 1), ((9, 32, 7), 1, 1, 1), ((8, 32, 6), 1, 1, 1), ((8, 32, 4), 1, 1, 1), ((9, 32, 5), 1, 1, 1), ((8, 32, 5), 1, 1, 1), ((9, 36, 3), 1, 1, 1), ((3, 32, 16), 1, 1, 1), ((3, 32, 17), 1, 1, 1), ((2, 32, 16), 1, 1, 1), ((1, 32, 18), 1, 1, 1), ((2, 32, 18), 1, 1, 1), ((2, 32, 19), 1, 1, 1), ((0, 32, 16), 1, 1, 1), ((0, 32, 17), 1, 1, 1), ((5, 32, 17), 1, 1, 1), ((4, 32, 16), 1, 1, 1), ((5, 32, 16), 1, 1, 1), ((7, 32, 19), 1, 1, 1), ((6, 33, 19), 1, 1, 1), ((7, 32, 18), 1, 1, 1), ((7, 32, 16), 1, 1, 1), ((6, 32, 16), 1, 1, 1), ((7, 32, 17), 1, 1, 1), ((7, 33, 17), 1, 1, 1), ((9, 32, 16), 1, 1, 1), ((9, 32, 17), 1, 1, 1), ((8, 32, 16), 1, 1, 1), ((10, 32, 16), 1, 1, 1), ((39, 34, 6), 1, 1, 1), ((33, 32, 3), 1, 1, 1), ((38, 32, 15), 1, 1, 1), ((33, 32, 8), 1, 1, 1), ((35, 32, 12), 1, 1, 1), ((36, 32, 16), 1, 1, 1)]
    for obstacle_box in obstacles:
        origin = obstacle_box[0]
        octree_dist[(*origin, 1)] = 1
    return octree_dist


def test_visible_volume(camera_far, occupancy_octree):
    # for debugging, visualize the occupancy octree
    camera = camera_far
    geometries = draw_octree_dist(occupancy_octree, viz=False)

    # The robot by default looks at -z direction. So, it will
    # have a rotation around x by default
    default_o3d_rotation = [180, 0, 0]  # don't change this

    rotation = [0,0,0]
    position = [4.277523355012637, 3.9782915879178717, 0.0452081835584708]
    sensor_pose = (*position, *euler_to_quat(*rotation))
    arrow = o3d.geometry.TriangleMesh.create_arrow(
        cylinder_radius=0.5, cone_radius=0.75, cylinder_height=3.0,
        cone_height=1.8)

    _o3d_rotation = np.array(default_o3d_rotation) + np.array(rotation)
    arrow.rotate(R_euler(*_o3d_rotation).as_matrix())
    arrow.translate(np.asarray(sensor_pose[:3]))
    arrow.paint_uniform_color([0.4, 0.4, 0.4])
    geometries.append(arrow)

    print("computing visible volume")
    volume, obstacles_hit = camera.visible_volume(
        sensor_pose, occupancy_octree, num_rays=150, step_size=0.6,
        obstacle_res=1, voxel_res=2,
        return_obstacles_hit=True)

    # Draw
    for voxel in volume:
        if voxel not in obstacles_hit:
            x, y, z, r = voxel
            box = o3d.geometry.TriangleMesh.create_box(width=r, height=r, depth=r)
            box.translate(np.asarray([x*r,y*r,z*r]))
            box.paint_uniform_color([0.0, 0.55, 0.98])
            geometries.append(box)

    for voxel in obstacles_hit:
        x, y, z, r = voxel
        box = o3d.geometry.TriangleMesh.create_box(width=r, height=r, depth=r)
        box.translate(np.asarray([x*r,y*r,z*r]))
        box.paint_uniform_color([0.0, 0.05, 0.75])
        geometries.append(box)
    o3d.visualization.draw_geometries(geometries)
