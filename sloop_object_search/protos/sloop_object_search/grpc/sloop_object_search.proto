// Top-level services. For example, start the sloop object search server

syntax = "proto3";

package sloop_object_search.grpc;

import "sloop_object_search/grpc/common.proto";
import "sloop_object_search/grpc/observation.proto";


service SloopObjectSearch {

  rpc CreateAgent(CreateAgentRequest) returns (CreateAgentReply) {}

  // Get agent status
  rpc GetAgentCreationStatus(GetAgentCreationStatusRequest) returns (GetAgentCreationStatusReply) {}

  // More fine-grained rpcs for specific functionality
  rpc UpdateSearchRegion(UpdateSearchRegionRequest) returns (UpdateSearchRegionReply) {}

}


/////////////////////////////////////
// top-level rpc messages
/////////////////////////////////////
message CreateAgentRequest {
  Header header = 1;
  string agent_name = 2;

  // serialized configuration dictionary
  bytes config = 3;
}

message CreateAgentReply {
  Header header = 1;
  Status status = 2;
  string message = 3;
}

message GetAgentCreationStatusRequest {
  Header header = 1;
  string agent_name = 2;
}

message GetAgentCreationStatusReply {
  Header header = 1;
  Status status = 2;
  string status_message = 3;
}

message UpdateSearchRegionRequest {
  Header header = 1;
  string agent_name = 2;

  // Whether the search region is 3D.
  bool is_3d = 3;

  // robot pose in the world frame
  oneof robot_pose {
    Pose2D robot_pose_2d = 4;
    Pose3D robot_pose_3d = 5;
  }

  oneof search_region {
    OccupancyGrid occupancy_grid = 6;
    PointCloud point_cloud = 7;
  }

  oneof search_region_params {
    SearchRegionParams2D search_region_params_2d = 8;
    SearchRegionParams3D search_region_params_3d = 9;
  }
}

message UpdateSearchRegionReply {
  Header header = 1;
  Status status = 2;
  string message = 3;
}

/////////////////////////////////////
// Auxiliary messages
/////////////////////////////////////
message SearchRegionParams2D {
  optional double layout_cut = 1;
  optional double floor_cut = 2;
  optional double grid_size = 3;
  optional double brush_size = 4;
  optional double region_size = 5;
  optional bool debug = 6;
}


message SearchRegionParams3D {
  optional int32 octree_size = 1;
  optional double search_space_resolution = 2;
  optional bool debug = 3;
}
